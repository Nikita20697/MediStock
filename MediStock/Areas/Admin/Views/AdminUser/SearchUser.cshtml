@model IPagedList<MediStockWeb.Areas.Admin.Models.UserModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@{
    ViewData["Title"] = "SearchUser";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<link href="G:\GitMediStock\MediStock\wwwroot\Content\Themes\Admin\assets\css\bootstrap.min.css" rel="stylesheet" />

<div class="page-inner">
    <div class="page-header">
        <h4 class="page-title">Users</h4>
        <button class="btn btn-primary"
                type="button"
                style="position: absolute;
                       right: 34px;
                       box-shadow: 4px 4px 10px 0 rgba(0,0,0,.1),4px 4px 15px -5px rgba(21,114,232,.4)!important;"
                onclick="window.location.href='@Url.Action("Create", "AdminUser")'">
            Add New
        </button>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="form-group">
                    <div class="input-group">
                        <div class="input-group-prepend">
                          @using (Html.BeginForm("SearchUser", "AdminUser", FormMethod.Post, new { @id = "searchFormID", @class = "form-group" }))
            {
                <div class="row">
                    <div class="col-md-4 float-right no-margin no-padding">
                        @Html.TextBox("searchString", null, new { @id = "searchID", @class = "form-control shadow" })
                    </div>
                    <div class="col-md-4 float-left no-margin no-padding">
                        <input type="submit" value="Search" onclick="validateSearch()" style="margin-left:5px;" class="btn btn-success shadow">
                    </div>
                    <div class="col-4">
                        <a href="@Url.Action("List","AdminUser",new { area="Admin"})" class="btn btn-primary shadow float-right" style="margin-top:5px;">Show All</a>
                    </div>
                </div>
            }
                            
                        </div>
                        
                    </div>
                </div>
                <div class="card-body">

                    <table class="table mt-3">
                        <thead>
                            <tr>
                                <th scope="col">First Name</th>
                                <th scope="col">Email</th>
                                <th scope="col">Phone</th>
                                <th scope="col">Is Active</th>
                                <th scope="col">is Deleted</th>
                                <th scope="col">Edit</th>
                                <th scope="col">Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                         @if (Model.Count() == 0)
                    {
                        <tr>
                            <td style="color:red;">
                                No Match
                            </td>
                        </tr>
                    }
                            
                           else
                    {
                        foreach (var user in Model)
                        {
                            <tr>
                                @*<td>@user.UserID</td>*@
                                <td>@user.FirstName</td>
                                <td>@user.Phone</td>
                                <td>@user.Email</td>
                                
                                <td>
                                    @if (@user.IsActive == true)
                                    {<h5 style="color:green;">yes</h5> }
                                    else
                                    {
                                        <h5 style="color:red;">No</h5>
                                    }
                                </td>
                                <td>
                                    @if (@user.IsDeleted == true)
                                    {<h5 style="color:green;">yes</h5> }
                                    else
                                    {
                                        <h5 style="color:red;">No</h5>
                                    }
                                </td>
                                @*<td>@user.createdOn</td>
                                    <td>@user.updatedOn</td>*@
                                <td><a href="@Url.Action("Edit", "AdminUser", new { area = "Admin", id = user.UserID })" class="btn btn-warning shadow btn-sm active" role="button" aria-pressed="true">Edit</a></td>
                                <td><a href="@Url.Action("Delete", "AdminUser", new { area = "Admin", id = user.UserID })" class="btn btn-danger shadow btn-sm active" role="button" aria-pressed="true" onclick="return confirmDelete()">Delete</a></td>
                                @*<td><span data-userid="@user.UserID" data-href="@Url.Action("DeleteUser", "AdminUser", new { area = "Admin", id = user.UserID })"
                                    class="btn btn-danger shadow btn-sm active btnDeleteUser" role="button" aria-pressed="true">Delete</span></td>*@

                            </tr>
                        }
                    }
                        </tbody>
                    </table>
                    <div class="pagination pg-primary">
                        <div class="page-item">
                            <div class="page-link">
                                @Html.PagedListPager((IPagedList)Model, page => Url.Action("List", "AdminUser", new { page = page }))
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer">
            <p class="box-title"><b>Total Users till @String.Format("{0 : dddd, MMMM d, yyyy}", DateTime.Now)  : </b><span class="label label-primary">@Model.Count()</span></p>
        </div>
            </div>
        </div>
    </div>
</div>

<script>

    function validateSearch() {

        var searchString = document.forms["searchFormID"]["searchID"].value;
        if (searchString == "") {
            alert("Please type something in search box");
            return false;
        }
        if (!(searchString.length >= 3 && searchString.length <= 250)) {
            alert("Search string should be not more than 250 characters");
            return false;
        }

    }

    function confirmDelete() {
        return confirm("Are you shure you want to Delete the selected item ?");
    }
</script>

